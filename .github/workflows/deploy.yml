name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'main.py'
      - 'Dockerfile'
      - 'requirements.txt'
  workflow_dispatch:

env:
  PROJECT_ID: av-8675309
  SERVICE_NAME: av-app
  REGION: us-central1
  WORKLOAD_IDENTITY_PROVIDER: projects/939407899550/locations/global/workloadIdentityPools/github-pool/providers/github-provider
  SERVICE_ACCOUNT: github-actions@av-8675309.iam.gserviceaccount.com

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:staging-${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:staging-${{ github.sha }}

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}-staging
        region: ${{ env.REGION }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:staging-${{ github.sha }}
        flags: >-
          --min-instances=1
          --max-instances=5
          --memory=2Gi
          --cpu=2
          --concurrency=80
          --timeout=300s
          --set-env-vars=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }},YOUTUBE_CLIENT_ID=${{ secrets.YOUTUBE_CLIENT_ID }},YOUTUBE_CLIENT_SECRET=${{ secrets.YOUTUBE_CLIENT_SECRET }},YOUTUBE_PROJECT_ID=${{ secrets.YOUTUBE_PROJECT_ID }},YOUTUBE_ENABLED=true,ENVIRONMENT=staging
          --use-http2
          --port=8080
          --allow-unauthenticated

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        flags: >-
          --min-instances=1
          --max-instances=10
          --memory=2Gi
          --cpu=2
          --concurrency=80
          --timeout=300s
          --set-env-vars=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }},YOUTUBE_CLIENT_ID=${{ secrets.YOUTUBE_CLIENT_ID }},YOUTUBE_CLIENT_SECRET=${{ secrets.YOUTUBE_CLIENT_SECRET }},YOUTUBE_PROJECT_ID=${{ secrets.YOUTUBE_PROJECT_ID }},YOUTUBE_ENABLED=true,ENVIRONMENT=production
          --use-http2
          --port=8080
          --allow-unauthenticated
